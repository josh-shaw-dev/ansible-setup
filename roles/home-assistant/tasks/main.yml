---
# Custom integration steps
- name: Clone the echonet lite repository
  git:
    repo: https://github.com/scottyphillips/echonetlite_homeassistant.git
    dest: "{{ docker_compose_dir }}/echonet"
    clone: yes
    update: yes

- name: Copy echonet lite files
  become: yes
  ansible.builtin.copy:
    src: "{{ docker_compose_dir }}/echonet/custom_components/echonetlite"
    dest: "{{ home_assistant_dir }}/custom_components/"
    remote_src: yes
    directory_mode: 0600
    owner: hassuser
    group: hassgroup

- name: Clone the opensprinkler plugin repository
  git:
    repo: https://github.com/vinteo/hass-opensprinkler.git
    dest: "{{ docker_compose_dir }}/hass-opensprinkler"
    clone: yes
    update: yes

- name: Copy opensprinkler plugin files
  become: yes
  ansible.builtin.copy:
    src: "{{ docker_compose_dir }}/hass-opensprinkler/custom_components/opensprinkler"
    dest: "{{ home_assistant_dir }}/custom_components/"
    remote_src: yes
    directory_mode: 0600
    owner: hassuser
    group: hassgroup

- name: Clone the hass-auto-backup plugin repository
  git:
    repo: https://github.com/jcwillox/hass-auto-backup.git
    dest: "{{ docker_compose_dir }}/hass-opensprinkler"
    clone: yes
    update: yes

- name: Copy hass-auto-backup plugin files
  become: yes
  ansible.builtin.copy:
    src: "{{ docker_compose_dir }}/hass-auto-backup/custom_components/auto_backup"
    dest: "{{ home_assistant_dir }}/custom_components/"
    remote_src: yes
    directory_mode: 0600
    owner: hassuser
    group: hassgroup

- name: Clone the opensprinkler local weather
  git:
    repo: https://github.com/OpenSprinkler/OpenSprinkler-Weather.git
    dest: "{{ docker_compose_dir }}/opensprinkler-weather"
    clone: yes
    update: yes

- name: Creating opensprinkler weather env file
  copy:
    dest: "{{ docker_compose_dir }}/opensprinkler-weather/.env"
    force: no
    content: |
      HOST=0.0.0.0
      PORT=3000
      WEATHER_PROVIDER=local
      PWS=WU

- name: Execute opensprinkler local weather docker build script
  ansible.builtin.command: /home/sypro/home-assistant-docker/opensprinkler-weather/build-docker.sh
  args:
    chdir: /home/sypro/home-assistant-docker/opensprinkler-weather

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ home_assistant_dir }}/www"
    state: directory
    mode: '0755'
  become: yes  

- name: Download opensprinkler js card
  ansible.builtin.get_url:
    url: https://github.com/rianadon/opensprinkler-card/releases/latest/download/opensprinkler-card.js
    dest: "{{ home_assistant_dir }}/www/opensprinkler-card.js"
    mode: '0755'
    owner: hassuser
    group: hassgroup     
  become: yes  

- name: Clone the pfsense plugin repository
  git:
    repo: https://github.com/travisghansen/hass-pfsense.git
    dest: "{{ docker_compose_dir }}/hass-pfsense"
    clone: yes
    update: yes

- name: Copy pfsense plugin files
  become: yes
  ansible.builtin.copy:
    src: "{{ docker_compose_dir }}/hass-pfsense/custom_components/pfsense"
    dest: "{{ home_assistant_dir }}/custom_components/"
    remote_src: yes
    directory_mode: 0600
    owner: hassuser
    group: hassgroup         

# Docker compose setup steps
- name: Copy dockerfile weewx
  template:
    src: files/DockerfileWeewx
    dest: "{{ docker_compose_dir }}"
    mode: 0600

- name: Copy compose source templates
  template:
    src: files/docker-compose.yml
    dest: "{{ docker_compose_dir }}"
    mode: 0600

- name: Tear down existing services
  community.docker.docker_compose_v2:
    project_src: "{{ docker_compose_dir }}"
    state: absent

- name: Create and start services
  community.docker.docker_compose_v2:
    project_src: "{{ docker_compose_dir }}"
  register: output

- ansible.builtin.debug:
    var: output

- name: Run `docker-compose up` again
  community.docker.docker_compose_v2:
    project_src: "{{ docker_compose_dir }}"
    build: never
  register: output

- ansible.builtin.debug:
    var: output

- ansible.builtin.assert:
    that: "not output.changed "
