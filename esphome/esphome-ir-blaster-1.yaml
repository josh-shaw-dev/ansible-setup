esphome:
  name: esphome-ir-blaster-1
  friendly_name: Dining Room IR Blaster

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: .localdomain

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap: {}

captive_portal:

remote_transmitter:
  - id: transmitter_ir
    pin: GPIO2
    carrier_duty_percent: 50%
  # - id: transmitter_rf
  #   pin: GPIO22
  #   carrier_duty_percent: 50%

remote_receiver:
  # see https://esphome.io/components/remote_transmitter.html#setting-up-infrared-devices
  # for details on discovering the correct codes for your devices
  - id: receiver_ir
    pin:
      number: GPIO23
      inverted: True
    dump: all
    # Settings to optimize recognition of RF devices
    tolerance: 50%

  # see https://esphome.io/components/remote_transmitter.html#setting-up-rf-devices
  # for details on discovering the correct codes for your devices
  # - id: receiver_rf
  #   pin:
  #     number: GPIO13
  #   dump: all
  #   # Settings to optimize recognition of RF devices
  #   tolerance: 50%
  #   filter: 250us
  #   idle: 4ms
  #   buffer_size: 2kb

# switch:
#   # an example
#   - platform: template
#     name: Turn on TV
#     turn_on_action:
#       - transmitter_ir.transmit_sony:
#           data: 0x00000750
#           repeat:
#             times: 5
#             wait_time: 45ms
#     id: tv_on

climate:
  - platform: toshiba
    name: "Dining Room AC"

web_server:
  local: true